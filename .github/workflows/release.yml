name: Release Desktop Apps

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-desktop:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows build (portable executable only)
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            package-types: nsis

          # Linux build (portable AppImage + deb package)
          - platform: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            package-types: appimage,deb

          # macOS build (portable app bundle only)
          - platform: macos-latest
            target: x86_64-apple-darwin
            package-types: app

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './dxrc -> target'

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Install Dioxus CLI
        run: |
          cd dxrc
          chmod +x install-dx.sh
          ./install-dx.sh 0.7.0-rc.3

      - name: Build desktop bundle
        run: |
          cd dxrc
          dx bundle --platform desktop --package-types ${{ matrix.package-types }} --release

      - name: Upload artifacts (Windows)
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: dxrc-windows
          path: dxrc/dist/bundle/nsis/*.exe
          if-no-files-found: warn

      - name: Upload artifacts (Linux)
        if: matrix.platform == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: dxrc-linux
          path: |
            dxrc/dist/bundle/appimage/*.AppImage
            dxrc/dist/bundle/deb/*.deb
          if-no-files-found: warn

      - name: Upload artifacts (macOS)
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: dxrc-macos
          path: dxrc/dist/bundle/macos/*.app
          if-no-files-found: warn

  create-release:
    needs: build-desktop
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
